import numpy as np
import pandas as pd
import joblib
import csv

from inference_schema.schema_decorators import input_schema, output_schema
from inference_schema.parameter_types.numpy_parameter_type import NumpyParameterType
from inference_schema.parameter_types.pandas_parameter_type import PandasParameterType
from inference_schema.parameter_types.standard_py_parameter_type import StandardPythonParameterType

from type_convert import type_convert

data_sample = PandasParameterType(pd.DataFrame({"Column2": pd.Series(["example_value"], dtype="object"), "CODE_GENDER": pd.Series([0], dtype="int64"), "FLAG_OWN_CAR": pd.Series([0], dtype="int64"), "FLAG_OWN_REALTY": pd.Series([0], dtype="int64"), "CNT_CHILDREN": pd.Series([0], dtype="int64"), "AMT_INCOME_TOTAL": pd.Series([0.0], dtype="float64"), "AMT_CREDIT": pd.Series([0.0], dtype="float64"), "AMT_ANNUITY": pd.Series([0.0], dtype="float64"), "AMT_GOODS_PRICE": pd.Series([0.0], dtype="float64"), "REGION_POPULATION_RELATIVE": pd.Series([0.0], dtype="float64"), "DAYS_BIRTH": pd.Series([0], dtype="int64"), "DAYS_EMPLOYED": pd.Series([0.0], dtype="float64"), "DAYS_REGISTRATION": pd.Series([0.0], dtype="float64"), "DAYS_ID_PUBLISH": pd.Series([0], dtype="int64"), "OWN_CAR_AGE": pd.Series([0.0], dtype="float64"), "FLAG_MOBIL": pd.Series([0], dtype="int64"), "FLAG_EMP_PHONE": pd.Series([0], dtype="int64"), "FLAG_WORK_PHONE": pd.Series([0], dtype="int64"), "FLAG_CONT_MOBILE": pd.Series([0], dtype="int64"), "FLAG_PHONE": pd.Series([0], dtype="int64"), "FLAG_EMAIL": pd.Series([0], dtype="int64"), "CNT_FAM_MEMBERS": pd.Series([0.0], dtype="float64"), "REGION_RATING_CLIENT": pd.Series([0], dtype="int64"), "REGION_RATING_CLIENT_W_CITY": pd.Series([0], dtype="int64"), "HOUR_APPR_PROCESS_START": pd.Series([0], dtype="int64"), "REG_REGION_NOT_LIVE_REGION": pd.Series([0], dtype="int64"), "REG_REGION_NOT_WORK_REGION": pd.Series([0], dtype="int64"), "LIVE_REGION_NOT_WORK_REGION": pd.Series([0], dtype="int64"), "REG_CITY_NOT_LIVE_CITY": pd.Series([0], dtype="int64"), "REG_CITY_NOT_WORK_CITY": pd.Series([0], dtype="int64"), "LIVE_CITY_NOT_WORK_CITY": pd.Series([0], dtype="int64"), "EXT_SOURCE_1": pd.Series([0.0], dtype="float64"), "EXT_SOURCE_2": pd.Series([0.0], dtype="float64"), "EXT_SOURCE_3": pd.Series([0.0], dtype="float64"), "APARTMENTS_AVG": pd.Series([0.0], dtype="float64"), "BASEMENTAREA_AVG": pd.Series([0.0], dtype="float64"), "YEARS_BEGINEXPLUATATION_AVG": pd.Series([0.0], dtype="float64"), "YEARS_BUILD_AVG": pd.Series([0.0], dtype="float64"), "COMMONAREA_AVG": pd.Series([0.0], dtype="float64"), "ELEVATORS_AVG": pd.Series([0.0], dtype="float64"), "ENTRANCES_AVG": pd.Series([0.0], dtype="float64"), "FLOORSMAX_AVG": pd.Series([0.0], dtype="float64"), "FLOORSMIN_AVG": pd.Series([0.0], dtype="float64"), "LANDAREA_AVG": pd.Series([0.0], dtype="float64"), "LIVINGAPARTMENTS_AVG": pd.Series([0.0], dtype="float64"), "LIVINGAREA_AVG": pd.Series([0.0], dtype="float64"), "NONLIVINGAPARTMENTS_AVG": pd.Series([0.0], dtype="float64"), "NONLIVINGAREA_AVG": pd.Series([0.0], dtype="float64"), "APARTMENTS_MODE": pd.Series([0.0], dtype="float64"), "BASEMENTAREA_MODE": pd.Series([0.0], dtype="float64"), "YEARS_BEGINEXPLUATATION_MODE": pd.Series([0.0], dtype="float64"), "YEARS_BUILD_MODE": pd.Series([0.0], dtype="float64"), "COMMONAREA_MODE": pd.Series([0.0], dtype="float64"), "ELEVATORS_MODE": pd.Series([0.0], dtype="float64"), "ENTRANCES_MODE": pd.Series([0.0], dtype="float64"), "FLOORSMAX_MODE": pd.Series([0.0], dtype="float64"), "FLOORSMIN_MODE": pd.Series([0.0], dtype="float64"), "LANDAREA_MODE": pd.Series([0.0], dtype="float64"), "LIVINGAPARTMENTS_MODE": pd.Series([0.0], dtype="float64"), "LIVINGAREA_MODE": pd.Series([0.0], dtype="float64"), "NONLIVINGAPARTMENTS_MODE": pd.Series([0.0], dtype="float64"), "NONLIVINGAREA_MODE": pd.Series([0.0], dtype="float64"), "APARTMENTS_MEDI": pd.Series([0.0], dtype="float64"), "BASEMENTAREA_MEDI": pd.Series([0.0], dtype="float64"), "YEARS_BEGINEXPLUATATION_MEDI": pd.Series([0.0], dtype="float64"), "YEARS_BUILD_MEDI": pd.Series([0.0], dtype="float64"), "COMMONAREA_MEDI": pd.Series([0.0], dtype="float64"), "ELEVATORS_MEDI": pd.Series([0.0], dtype="float64"), "ENTRANCES_MEDI": pd.Series([0.0], dtype="float64"), "FLOORSMAX_MEDI": pd.Series([0.0], dtype="float64"), "FLOORSMIN_MEDI": pd.Series([0.0], dtype="float64"), "LANDAREA_MEDI": pd.Series([0.0], dtype="float64"), "LIVINGAPARTMENTS_MEDI": pd.Series([0.0], dtype="float64"), "LIVINGAREA_MEDI": pd.Series([0.0], dtype="float64"), "NONLIVINGAPARTMENTS_MEDI": pd.Series([0.0], dtype="float64"), "NONLIVINGAREA_MEDI": pd.Series([0.0], dtype="float64"), "TOTALAREA_MODE": pd.Series([0.0], dtype="float64"), "OBS_30_CNT_SOCIAL_CIRCLE": pd.Series([0.0], dtype="float64"), "DEF_30_CNT_SOCIAL_CIRCLE": pd.Series([0.0], dtype="float64"), "OBS_60_CNT_SOCIAL_CIRCLE": pd.Series([0.0], dtype="float64"), "DEF_60_CNT_SOCIAL_CIRCLE": pd.Series([0.0], dtype="float64"), "DAYS_LAST_PHONE_CHANGE": pd.Series([0.0], dtype="float64"), "FLAG_DOCUMENT_2": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_3": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_4": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_5": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_6": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_7": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_8": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_9": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_10": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_11": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_12": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_13": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_14": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_15": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_16": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_17": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_18": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_19": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_20": pd.Series([0], dtype="int64"), "FLAG_DOCUMENT_21": pd.Series([0], dtype="int64"), "AMT_REQ_CREDIT_BUREAU_HOUR": pd.Series([0.0], dtype="float64"), "AMT_REQ_CREDIT_BUREAU_DAY": pd.Series([0.0], dtype="float64"), "AMT_REQ_CREDIT_BUREAU_WEEK": pd.Series([0.0], dtype="float64"), "AMT_REQ_CREDIT_BUREAU_MON": pd.Series([0.0], dtype="float64"), "AMT_REQ_CREDIT_BUREAU_QRT": pd.Series([0.0], dtype="float64"), "AMT_REQ_CREDIT_BUREAU_YEAR": pd.Series([0.0], dtype="float64"), "NAME_CONTRACT_TYPE_Cashloans": pd.Series([0], dtype="int64"), "NAME_CONTRACT_TYPE_Revolvingloans": pd.Series([0], dtype="int64"), "NAME_TYPE_SUITE_Children": pd.Series([0], dtype="int64"), "NAME_TYPE_SUITE_Family": pd.Series([0], dtype="int64"), "NAME_TYPE_SUITE_Groupofpeople": pd.Series([0], dtype="int64"), "NAME_TYPE_SUITE_Other_A": pd.Series([0], dtype="int64"), "NAME_TYPE_SUITE_Other_B": pd.Series([0], dtype="int64"), "NAME_TYPE_SUITE_Spousepartner": pd.Series([0], dtype="int64"), "NAME_TYPE_SUITE_Unaccompanied": pd.Series([0], dtype="int64"), "NAME_INCOME_TYPE_Businessman": pd.Series([0], dtype="int64"), "NAME_INCOME_TYPE_Commercialassociate": pd.Series([0], dtype="int64"), "NAME_INCOME_TYPE_Maternityleave": pd.Series([0], dtype="int64"), "NAME_INCOME_TYPE_Pensioner": pd.Series([0], dtype="int64"), "NAME_INCOME_TYPE_Stateservant": pd.Series([0], dtype="int64"), "NAME_INCOME_TYPE_Student": pd.Series([0], dtype="int64"), "NAME_INCOME_TYPE_Unemployed": pd.Series([0], dtype="int64"), "NAME_INCOME_TYPE_Working": pd.Series([0], dtype="int64"), "NAME_EDUCATION_TYPE_Academicdegree": pd.Series([0], dtype="int64"), "NAME_EDUCATION_TYPE_Highereducation": pd.Series([0], dtype="int64"), "NAME_EDUCATION_TYPE_Incompletehigher": pd.Series([0], dtype="int64"), "NAME_EDUCATION_TYPE_Lowersecondary": pd.Series([0], dtype="int64"), "NAME_EDUCATION_TYPE_Secondarysecondaryspecial": pd.Series([0], dtype="int64"), "NAME_FAMILY_STATUS_Civilmarriage": pd.Series([0], dtype="int64"), "NAME_FAMILY_STATUS_Married": pd.Series([0], dtype="int64"), "NAME_FAMILY_STATUS_Separated": pd.Series([0], dtype="int64"), "NAME_FAMILY_STATUS_Singlenotmarried": pd.Series([0], dtype="int64"), "NAME_FAMILY_STATUS_Unknown": pd.Series([0], dtype="int64"), "NAME_FAMILY_STATUS_Widow": pd.Series([0], dtype="int64"), "NAME_HOUSING_TYPE_Coopapartment": pd.Series([0], dtype="int64"), "NAME_HOUSING_TYPE_Houseapartment": pd.Series([0], dtype="int64"), "NAME_HOUSING_TYPE_Municipalapartment": pd.Series([0], dtype="int64"), "NAME_HOUSING_TYPE_Officeapartment": pd.Series([0], dtype="int64"), "NAME_HOUSING_TYPE_Rentedapartment": pd.Series([0], dtype="int64"), "NAME_HOUSING_TYPE_Withparents": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Accountants": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Cleaningstaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Cookingstaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Corestaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Drivers": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_HRstaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Highskilltechstaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_ITstaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Laborers": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_LowskillLaborers": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Managers": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Medicinestaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Privateservicestaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Realtyagents": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Salesstaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Secretaries": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Securitystaff": pd.Series([0], dtype="int64"), "OCCUPATION_TYPE_Waitersbarmenstaff": pd.Series([0], dtype="int64"), "WEEKDAY_APPR_PROCESS_START_FRIDAY": pd.Series([0], dtype="int64"), "WEEKDAY_APPR_PROCESS_START_MONDAY": pd.Series([0], dtype="int64"), "WEEKDAY_APPR_PROCESS_START_SATURDAY": pd.Series([0], dtype="int64"), "WEEKDAY_APPR_PROCESS_START_SUNDAY": pd.Series([0], dtype="int64"), "WEEKDAY_APPR_PROCESS_START_THURSDAY": pd.Series([0], dtype="int64"), "WEEKDAY_APPR_PROCESS_START_TUESDAY": pd.Series([0], dtype="int64"), "WEEKDAY_APPR_PROCESS_START_WEDNESDAY": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Advertising": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Agriculture": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Bank": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_BusinessEntityType1": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_BusinessEntityType2": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_BusinessEntityType3": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Cleaning": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Construction": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Culture": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Electricity": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Emergency": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Government": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Hotel": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Housing": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype1": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype10": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype11": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype12": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype13": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype2": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype3": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype4": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype5": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype6": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype7": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype8": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Industrytype9": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Insurance": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Kindergarten": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_LegalServices": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Medicine": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Military": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Mobile": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Other": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Police": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Postal": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Realtor": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Religion": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Restaurant": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_School": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Security": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_SecurityMinistries": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Selfemployed": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Services": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Telecom": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Tradetype1": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Tradetype2": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Tradetype3": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Tradetype4": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Tradetype5": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Tradetype6": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Tradetype7": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Transporttype1": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Transporttype2": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Transporttype3": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_Transporttype4": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_University": pd.Series([0], dtype="int64"), "ORGANIZATION_TYPE_XNA": pd.Series([0], dtype="int64"), "FONDKAPREMONT_MODE_notspecified": pd.Series([0], dtype="int64"), "FONDKAPREMONT_MODE_orgspecaccount": pd.Series([0], dtype="int64"), "FONDKAPREMONT_MODE_regoperaccount": pd.Series([0], dtype="int64"), "FONDKAPREMONT_MODE_regoperspecaccount": pd.Series([0], dtype="int64"), "HOUSETYPE_MODE_blockofflats": pd.Series([0], dtype="int64"), "HOUSETYPE_MODE_specifichousing": pd.Series([0], dtype="int64"), "HOUSETYPE_MODE_terracedhouse": pd.Series([0], dtype="int64"), "WALLSMATERIAL_MODE_Block": pd.Series([0], dtype="int64"), "WALLSMATERIAL_MODE_Mixed": pd.Series([0], dtype="int64"), "WALLSMATERIAL_MODE_Monolithic": pd.Series([0], dtype="int64"), "WALLSMATERIAL_MODE_Others": pd.Series([0], dtype="int64"), "WALLSMATERIAL_MODE_Panel": pd.Series([0], dtype="int64"), "WALLSMATERIAL_MODE_Stonebrick": pd.Series([0], dtype="int64"), "WALLSMATERIAL_MODE_Wooden": pd.Series([0], dtype="int64"), "EMERGENCYSTATE_MODE_No": pd.Series([0], dtype="int64"), "EMERGENCYSTATE_MODE_Yes": pd.Series([0], dtype="int64"), "BURO_DAYS_CREDIT_MIN": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_MAX": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_MEAN": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_SIZE": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_ENDDATE_MIN": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_ENDDATE_MAX": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_ENDDATE_MEAN": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_ENDDATE_SIZE": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_UPDATE_MIN": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_UPDATE_MAX": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_UPDATE_MEAN": pd.Series([0.0], dtype="float64"), "BURO_DAYS_CREDIT_UPDATE_SIZE": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_DAY_OVERDUE_MIN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_DAY_OVERDUE_MAX": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_DAY_OVERDUE_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_DAY_OVERDUE_SIZE": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_MAX_OVERDUE_MIN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_MAX_OVERDUE_MAX": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_MAX_OVERDUE_MEAN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_MAX_OVERDUE_SIZE": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_MIN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_MAX": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_MEAN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_SIZE": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_DEBT_MIN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_DEBT_MAX": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_DEBT_MEAN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_DEBT_SIZE": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_OVERDUE_MIN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_OVERDUE_MAX": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_OVERDUE_MEAN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_OVERDUE_SIZE": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_LIMIT_MIN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_LIMIT_MAX": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_LIMIT_MEAN": pd.Series([0.0], dtype="float64"), "BURO_AMT_CREDIT_SUM_LIMIT_SIZE": pd.Series([0.0], dtype="float64"), "BURO_AMT_ANNUITY_MIN": pd.Series([0.0], dtype="float64"), "BURO_AMT_ANNUITY_MAX": pd.Series([0.0], dtype="float64"), "BURO_AMT_ANNUITY_MEAN": pd.Series([0.0], dtype="float64"), "BURO_AMT_ANNUITY_SIZE": pd.Series([0.0], dtype="float64"), "BURO_CNT_CREDIT_PROLONG_MIN": pd.Series([0.0], dtype="float64"), "BURO_CNT_CREDIT_PROLONG_MAX": pd.Series([0.0], dtype="float64"), "BURO_CNT_CREDIT_PROLONG_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CNT_CREDIT_PROLONG_SIZE": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_MIN_MIN": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_MIN_MAX": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_MIN_MEAN": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_MIN_SIZE": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_MAX_MIN": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_MAX_MAX": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_MAX_MEAN": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_MAX_SIZE": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_SIZE_MIN": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_SIZE_MAX": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_SIZE_MEAN": pd.Series([0.0], dtype="float64"), "BURO_MONTHS_BALANCE_SIZE_SIZE": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_ACTIVE_Active_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_ACTIVE_Baddebt_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_ACTIVE_Closed_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_ACTIVE_Sold_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_ACTIVE_nan_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_CURRENCY_currency1_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_CURRENCY_currency2_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_CURRENCY_currency3_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_CURRENCY_currency4_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_CURRENCY_nan_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Anothertypeofloan_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Carloan_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Cashloannonearmarked_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Consumercredit_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Creditcard_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Interbankcredit_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Loanforbusinessdevelopment_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Loanforpurchaseofsharesmarginlending_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Loanforthepurchaseofequipment_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Loanforworkingcapitalreplenishment_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Microloan_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Mobileoperatorloan_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Mortgage_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Realestateloan_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_Unknowntypeofloan_MEAN": pd.Series([0.0], dtype="float64"), "BURO_CREDIT_TYPE_nan_MEAN": pd.Series([0.0], dtype="float64"), "BURO_STATUS_0_MEAN_MEAN": pd.Series([0.0], dtype="float64"), "BURO_STATUS_1_MEAN_MEAN": pd.Series([0.0], dtype="float64"), "BURO_STATUS_2_MEAN_MEAN": pd.Series([0.0], dtype="float64"), "BURO_STATUS_3_MEAN_MEAN": pd.Series([0.0], dtype="float64"), "BURO_STATUS_4_MEAN_MEAN": pd.Series([0.0], dtype="float64"), "BURO_STATUS_5_MEAN_MEAN": pd.Series([0.0], dtype="float64"), "BURO_STATUS_C_MEAN_MEAN": pd.Series([0.0], dtype="float64"), "BURO_STATUS_X_MEAN_MEAN": pd.Series([0.0], dtype="float64"), "BURO_STATUS_nan_MEAN_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_ENDDATE_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_ENDDATE_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_ENDDATE_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_ENDDATE_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_UPDATE_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_UPDATE_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_UPDATE_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_DAYS_CREDIT_UPDATE_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_CREDIT_DAY_OVERDUE_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_CREDIT_DAY_OVERDUE_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_CREDIT_DAY_OVERDUE_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_CREDIT_DAY_OVERDUE_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_MAX_OVERDUE_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_MAX_OVERDUE_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_MAX_OVERDUE_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_MAX_OVERDUE_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_DEBT_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_DEBT_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_DEBT_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_DEBT_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_OVERDUE_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_OVERDUE_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_OVERDUE_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_OVERDUE_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_LIMIT_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_LIMIT_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_LIMIT_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_CREDIT_SUM_LIMIT_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_ANNUITY_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_ANNUITY_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_ANNUITY_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_AMT_ANNUITY_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_CNT_CREDIT_PROLONG_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_CNT_CREDIT_PROLONG_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_CNT_CREDIT_PROLONG_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_CNT_CREDIT_PROLONG_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_MIN_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_MIN_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_MIN_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_MIN_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_MAX_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_MAX_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_MAX_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_MAX_SIZE": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_SIZE_MIN": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_SIZE_MAX": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_SIZE_MEAN": pd.Series([0.0], dtype="float64"), "ACTIVE_MONTHS_BALANCE_SIZE_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_ENDDATE_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_ENDDATE_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_ENDDATE_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_ENDDATE_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_UPDATE_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_UPDATE_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_UPDATE_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_DAYS_CREDIT_UPDATE_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_CREDIT_DAY_OVERDUE_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_CREDIT_DAY_OVERDUE_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_CREDIT_DAY_OVERDUE_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_CREDIT_DAY_OVERDUE_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_MAX_OVERDUE_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_MAX_OVERDUE_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_MAX_OVERDUE_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_MAX_OVERDUE_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_DEBT_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_DEBT_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_DEBT_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_DEBT_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_OVERDUE_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_OVERDUE_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_OVERDUE_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_OVERDUE_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_LIMIT_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_LIMIT_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_LIMIT_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_CREDIT_SUM_LIMIT_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_ANNUITY_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_ANNUITY_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_ANNUITY_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_AMT_ANNUITY_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_CNT_CREDIT_PROLONG_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_CNT_CREDIT_PROLONG_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_CNT_CREDIT_PROLONG_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_CNT_CREDIT_PROLONG_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_MIN_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_MIN_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_MIN_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_MIN_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_MAX_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_MAX_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_MAX_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_MAX_SIZE": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_SIZE_MIN": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_SIZE_MAX": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_SIZE_MEAN": pd.Series([0.0], dtype="float64"), "CLOSED_MONTHS_BALANCE_SIZE_SIZE": pd.Series([0.0], dtype="float64"), "PREV_AMT_ANNUITY_MIN": pd.Series([0.0], dtype="float64"), "PREV_AMT_ANNUITY_MAX": pd.Series([0.0], dtype="float64"), "PREV_AMT_ANNUITY_MEAN": pd.Series([0.0], dtype="float64"), "PREV_AMT_ANNUITY_SIZE": pd.Series([0.0], dtype="float64"), "PREV_AMT_APPLICATION_MIN": pd.Series([0.0], dtype="float64"), "PREV_AMT_APPLICATION_MAX": pd.Series([0.0], dtype="float64"), "PREV_AMT_APPLICATION_MEAN": pd.Series([0.0], dtype="float64"), "PREV_AMT_APPLICATION_SIZE": pd.Series([0.0], dtype="float64"), "PREV_AMT_CREDIT_MIN": pd.Series([0.0], dtype="float64"), "PREV_AMT_CREDIT_MAX": pd.Series([0.0], dtype="float64"), "PREV_AMT_CREDIT_MEAN": pd.Series([0.0], dtype="float64"), "PREV_AMT_CREDIT_SIZE": pd.Series([0.0], dtype="float64"), "PREV_AMT_DOWN_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "PREV_AMT_DOWN_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "PREV_AMT_DOWN_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "PREV_AMT_DOWN_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "PREV_AMT_GOODS_PRICE_MIN": pd.Series([0.0], dtype="float64"), "PREV_AMT_GOODS_PRICE_MAX": pd.Series([0.0], dtype="float64"), "PREV_AMT_GOODS_PRICE_MEAN": pd.Series([0.0], dtype="float64"), "PREV_AMT_GOODS_PRICE_SIZE": pd.Series([0.0], dtype="float64"), "PREV_HOUR_APPR_PROCESS_START_MIN": pd.Series([0.0], dtype="float64"), "PREV_HOUR_APPR_PROCESS_START_MAX": pd.Series([0.0], dtype="float64"), "PREV_HOUR_APPR_PROCESS_START_MEAN": pd.Series([0.0], dtype="float64"), "PREV_HOUR_APPR_PROCESS_START_SIZE": pd.Series([0.0], dtype="float64"), "PREV_RATE_DOWN_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "PREV_RATE_DOWN_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "PREV_RATE_DOWN_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "PREV_RATE_DOWN_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "PREV_DAYS_DECISION_MIN": pd.Series([0.0], dtype="float64"), "PREV_DAYS_DECISION_MAX": pd.Series([0.0], dtype="float64"), "PREV_DAYS_DECISION_MEAN": pd.Series([0.0], dtype="float64"), "PREV_DAYS_DECISION_SIZE": pd.Series([0.0], dtype="float64"), "PREV_CNT_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "PREV_CNT_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "PREV_CNT_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CNT_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_TYPE_Cashloans_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_TYPE_Consumerloans_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_TYPE_Revolvingloans_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_TYPE_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_TYPE_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_WEEKDAY_APPR_PROCESS_START_FRIDAY_MEAN": pd.Series([0.0], dtype="float64"), "PREV_WEEKDAY_APPR_PROCESS_START_MONDAY_MEAN": pd.Series([0.0], dtype="float64"), "PREV_WEEKDAY_APPR_PROCESS_START_SATURDAY_MEAN": pd.Series([0.0], dtype="float64"), "PREV_WEEKDAY_APPR_PROCESS_START_SUNDAY_MEAN": pd.Series([0.0], dtype="float64"), "PREV_WEEKDAY_APPR_PROCESS_START_THURSDAY_MEAN": pd.Series([0.0], dtype="float64"), "PREV_WEEKDAY_APPR_PROCESS_START_TUESDAY_MEAN": pd.Series([0.0], dtype="float64"), "PREV_WEEKDAY_APPR_PROCESS_START_WEDNESDAY_MEAN": pd.Series([0.0], dtype="float64"), "PREV_WEEKDAY_APPR_PROCESS_START_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_FLAG_LAST_APPL_PER_CONTRACT_N_MEAN": pd.Series([0.0], dtype="float64"), "PREV_FLAG_LAST_APPL_PER_CONTRACT_Y_MEAN": pd.Series([0.0], dtype="float64"), "PREV_FLAG_LAST_APPL_PER_CONTRACT_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Buildingahouseoranannex_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Businessdevelopment_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Buyingagarage_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Buyingaholidayhomeland_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Buyingahome_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Buyinganewcar_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Buyingausedcar_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Carrepairs_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Education_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Everydayexpenses_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Furniture_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Gasificationwatersupply_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Hobby_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Journey_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Medicine_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Moneyforathirdperson_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Other_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Paymentsonotherloans_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Purchaseofelectronicequipment_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Refusaltonamethegoal_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Repairs_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Urgentneeds_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_Weddinggiftholiday_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_XAP_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CASH_LOAN_PURPOSE_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_STATUS_Approved_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_STATUS_Canceled_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_STATUS_Refused_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_STATUS_Unusedoffer_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CONTRACT_STATUS_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PAYMENT_TYPE_Cashthroughthebank_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PAYMENT_TYPE_Cashlessfromtheaccountoftheemployer_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PAYMENT_TYPE_Noncashfromyouraccount_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PAYMENT_TYPE_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PAYMENT_TYPE_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_CLIENT_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_HC_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_LIMIT_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_SCO_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_SCOFR_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_SYSTEM_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_VERIF_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_XAP_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CODE_REJECT_REASON_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_TYPE_SUITE_Children_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_TYPE_SUITE_Family_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_TYPE_SUITE_Groupofpeople_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_TYPE_SUITE_Other_A_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_TYPE_SUITE_Other_B_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_TYPE_SUITE_Spousepartner_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_TYPE_SUITE_Unaccompanied_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_TYPE_SUITE_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CLIENT_TYPE_New_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CLIENT_TYPE_Refreshed_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CLIENT_TYPE_Repeater_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CLIENT_TYPE_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_CLIENT_TYPE_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_AdditionalService_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Animals_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_AudioVideo_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_AutoAccessories_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_ClothingandAccessories_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Computers_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_ConstructionMaterials_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_ConsumerElectronics_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_DirectSales_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Education_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Fitness_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Furniture_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Gardening_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Homewares_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_HouseConstruction_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Insurance_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Jewelry_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_MedicalSupplies_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Medicine_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Mobile_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_OfficeAppliances_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Other_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_PhotoCinemaEquipment_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_SportandLeisure_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Tourism_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Vehicles_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_Weapon_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_GOODS_CATEGORY_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PORTFOLIO_Cards_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PORTFOLIO_Cars_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PORTFOLIO_Cash_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PORTFOLIO_POS_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PORTFOLIO_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PORTFOLIO_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PRODUCT_TYPE_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PRODUCT_TYPE_walkin_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PRODUCT_TYPE_xsell_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_PRODUCT_TYPE_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CHANNEL_TYPE_APCashloan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CHANNEL_TYPE_Cardealer_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CHANNEL_TYPE_Channelofcorporatesales_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CHANNEL_TYPE_Contactcenter_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CHANNEL_TYPE_Countrywide_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CHANNEL_TYPE_Creditandcashoffices_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CHANNEL_TYPE_RegionalLocal_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CHANNEL_TYPE_Stone_MEAN": pd.Series([0.0], dtype="float64"), "PREV_CHANNEL_TYPE_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_Autotechnology_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_Clothing_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_Connectivity_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_Construction_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_Consumerelectronics_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_Furniture_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_Industry_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_Jewelry_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_MLMpartners_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_Tourism_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_SELLER_INDUSTRY_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_YIELD_GROUP_XNA_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_YIELD_GROUP_high_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_YIELD_GROUP_low_action_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_YIELD_GROUP_low_normal_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_YIELD_GROUP_middle_MEAN": pd.Series([0.0], dtype="float64"), "PREV_NAME_YIELD_GROUP_nan_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_CardStreet_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_CardXSell_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_Cash_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_CashStreethigh_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_CashStreetlow_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_CashStreetmiddle_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_CashXSellhigh_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_CashXSelllow_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_CashXSellmiddle_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_POShouseholdwithinterest_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_POShouseholdwithoutinterest_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_POSindustrywithinterest_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_POSindustrywithoutinterest_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_POSmobilewithinterest_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_POSmobilewithoutinterest_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_POSotherwithinterest_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_POSotherswithoutinterest_MEAN": pd.Series([0.0], dtype="float64"), "PREV_PRODUCT_COMBINATION_nan_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_ANNUITY_MIN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_ANNUITY_MAX": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_ANNUITY_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_ANNUITY_SIZE": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_APPLICATION_MIN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_APPLICATION_MAX": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_APPLICATION_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_APPLICATION_SIZE": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_CREDIT_MIN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_CREDIT_MAX": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_CREDIT_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_CREDIT_SIZE": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_DOWN_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_DOWN_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_DOWN_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_DOWN_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_GOODS_PRICE_MIN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_GOODS_PRICE_MAX": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_GOODS_PRICE_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_AMT_GOODS_PRICE_SIZE": pd.Series([0.0], dtype="float64"), "APPROVED_HOUR_APPR_PROCESS_START_MIN": pd.Series([0.0], dtype="float64"), "APPROVED_HOUR_APPR_PROCESS_START_MAX": pd.Series([0.0], dtype="float64"), "APPROVED_HOUR_APPR_PROCESS_START_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_HOUR_APPR_PROCESS_START_SIZE": pd.Series([0.0], dtype="float64"), "APPROVED_RATE_DOWN_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "APPROVED_RATE_DOWN_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "APPROVED_RATE_DOWN_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_RATE_DOWN_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "APPROVED_DAYS_DECISION_MIN": pd.Series([0.0], dtype="float64"), "APPROVED_DAYS_DECISION_MAX": pd.Series([0.0], dtype="float64"), "APPROVED_DAYS_DECISION_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_DAYS_DECISION_SIZE": pd.Series([0.0], dtype="float64"), "APPROVED_CNT_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "APPROVED_CNT_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "APPROVED_CNT_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "APPROVED_CNT_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_ANNUITY_MIN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_ANNUITY_MAX": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_ANNUITY_MEAN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_ANNUITY_SIZE": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_APPLICATION_MIN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_APPLICATION_MAX": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_APPLICATION_MEAN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_APPLICATION_SIZE": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_CREDIT_MIN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_CREDIT_MAX": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_CREDIT_MEAN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_CREDIT_SIZE": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_DOWN_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_DOWN_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_DOWN_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_DOWN_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_GOODS_PRICE_MIN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_GOODS_PRICE_MAX": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_GOODS_PRICE_MEAN": pd.Series([0.0], dtype="float64"), "REFUSED_AMT_GOODS_PRICE_SIZE": pd.Series([0.0], dtype="float64"), "REFUSED_HOUR_APPR_PROCESS_START_MIN": pd.Series([0.0], dtype="float64"), "REFUSED_HOUR_APPR_PROCESS_START_MAX": pd.Series([0.0], dtype="float64"), "REFUSED_HOUR_APPR_PROCESS_START_MEAN": pd.Series([0.0], dtype="float64"), "REFUSED_HOUR_APPR_PROCESS_START_SIZE": pd.Series([0.0], dtype="float64"), "REFUSED_RATE_DOWN_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "REFUSED_RATE_DOWN_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "REFUSED_RATE_DOWN_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "REFUSED_RATE_DOWN_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "REFUSED_DAYS_DECISION_MIN": pd.Series([0.0], dtype="float64"), "REFUSED_DAYS_DECISION_MAX": pd.Series([0.0], dtype="float64"), "REFUSED_DAYS_DECISION_MEAN": pd.Series([0.0], dtype="float64"), "REFUSED_DAYS_DECISION_SIZE": pd.Series([0.0], dtype="float64"), "REFUSED_CNT_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "REFUSED_CNT_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "REFUSED_CNT_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "REFUSED_CNT_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "POS_MONTHS_BALANCE_MIN": pd.Series([0.0], dtype="float64"), "POS_MONTHS_BALANCE_MAX": pd.Series([0.0], dtype="float64"), "POS_MONTHS_BALANCE_MEAN": pd.Series([0.0], dtype="float64"), "POS_MONTHS_BALANCE_SIZE": pd.Series([0.0], dtype="float64"), "POS_SK_DPD_MIN": pd.Series([0.0], dtype="float64"), "POS_SK_DPD_MAX": pd.Series([0.0], dtype="float64"), "POS_SK_DPD_MEAN": pd.Series([0.0], dtype="float64"), "POS_SK_DPD_SIZE": pd.Series([0.0], dtype="float64"), "POS_SK_DPD_DEF_MIN": pd.Series([0.0], dtype="float64"), "POS_SK_DPD_DEF_MAX": pd.Series([0.0], dtype="float64"), "POS_SK_DPD_DEF_MEAN": pd.Series([0.0], dtype="float64"), "POS_SK_DPD_DEF_SIZE": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_Active_MEAN": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_Amortizeddebt_MEAN": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_Approved_MEAN": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_Canceled_MEAN": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_Completed_MEAN": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_Demand_MEAN": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_Returnedtothestore_MEAN": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_Signed_MEAN": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_XNA_MEAN": pd.Series([0.0], dtype="float64"), "POS_NAME_CONTRACT_STATUS_nan_MEAN": pd.Series([0.0], dtype="float64"), "POS_COUNT": pd.Series([0.0], dtype="float64"), "INSTAL_NUM_INSTALMENT_VERSION_MIN": pd.Series([0.0], dtype="float64"), "INSTAL_NUM_INSTALMENT_VERSION_MAX": pd.Series([0.0], dtype="float64"), "INSTAL_NUM_INSTALMENT_VERSION_MEAN": pd.Series([0.0], dtype="float64"), "INSTAL_NUM_INSTALMENT_VERSION_SIZE": pd.Series([0.0], dtype="float64"), "INSTAL_AMT_INSTALMENT_MIN": pd.Series([0.0], dtype="float64"), "INSTAL_AMT_INSTALMENT_MAX": pd.Series([0.0], dtype="float64"), "INSTAL_AMT_INSTALMENT_MEAN": pd.Series([0.0], dtype="float64"), "INSTAL_AMT_INSTALMENT_SIZE": pd.Series([0.0], dtype="float64"), "INSTAL_AMT_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "INSTAL_AMT_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "INSTAL_AMT_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "INSTAL_AMT_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "INSTAL_DAYS_ENTRY_PAYMENT_MIN": pd.Series([0.0], dtype="float64"), "INSTAL_DAYS_ENTRY_PAYMENT_MAX": pd.Series([0.0], dtype="float64"), "INSTAL_DAYS_ENTRY_PAYMENT_MEAN": pd.Series([0.0], dtype="float64"), "INSTAL_DAYS_ENTRY_PAYMENT_SIZE": pd.Series([0.0], dtype="float64"), "INSTAL_COUNT": pd.Series([0.0], dtype="float64"), "CC_MONTHS_BALANCE_MIN": pd.Series([0.0], dtype="float64"), "CC_MONTHS_BALANCE_MAX": pd.Series([0.0], dtype="float64"), "CC_MONTHS_BALANCE_MEAN": pd.Series([0.0], dtype="float64"), "CC_MONTHS_BALANCE_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_BALANCE_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_BALANCE_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_BALANCE_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_BALANCE_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_CREDIT_LIMIT_ACTUAL_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_CREDIT_LIMIT_ACTUAL_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_CREDIT_LIMIT_ACTUAL_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_CREDIT_LIMIT_ACTUAL_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_ATM_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_ATM_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_ATM_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_ATM_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_OTHER_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_OTHER_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_OTHER_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_OTHER_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_POS_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_POS_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_POS_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_DRAWINGS_POS_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_INST_MIN_REGULARITY_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_INST_MIN_REGULARITY_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_INST_MIN_REGULARITY_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_INST_MIN_REGULARITY_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_PAYMENT_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_PAYMENT_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_PAYMENT_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_PAYMENT_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_PAYMENT_TOTAL_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_PAYMENT_TOTAL_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_PAYMENT_TOTAL_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_PAYMENT_TOTAL_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_RECEIVABLE_PRINCIPAL_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_RECEIVABLE_PRINCIPAL_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_RECEIVABLE_PRINCIPAL_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_RECEIVABLE_PRINCIPAL_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_RECIVABLE_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_RECIVABLE_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_RECIVABLE_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_RECIVABLE_SIZE": pd.Series([0.0], dtype="float64"), "CC_AMT_TOTAL_RECEIVABLE_MIN": pd.Series([0.0], dtype="float64"), "CC_AMT_TOTAL_RECEIVABLE_MAX": pd.Series([0.0], dtype="float64"), "CC_AMT_TOTAL_RECEIVABLE_MEAN": pd.Series([0.0], dtype="float64"), "CC_AMT_TOTAL_RECEIVABLE_SIZE": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_ATM_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_ATM_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_ATM_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_ATM_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_OTHER_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_OTHER_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_OTHER_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_OTHER_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_POS_CURRENT_MIN": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_POS_CURRENT_MAX": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_POS_CURRENT_MEAN": pd.Series([0.0], dtype="float64"), "CC_CNT_DRAWINGS_POS_CURRENT_SIZE": pd.Series([0.0], dtype="float64"), "CC_CNT_INSTALMENT_MATURE_CUM_MIN": pd.Series([0.0], dtype="float64"), "CC_CNT_INSTALMENT_MATURE_CUM_MAX": pd.Series([0.0], dtype="float64"), "CC_CNT_INSTALMENT_MATURE_CUM_MEAN": pd.Series([0.0], dtype="float64"), "CC_CNT_INSTALMENT_MATURE_CUM_SIZE": pd.Series([0.0], dtype="float64"), "CC_SK_DPD_MIN": pd.Series([0.0], dtype="float64"), "CC_SK_DPD_MAX": pd.Series([0.0], dtype="float64"), "CC_SK_DPD_MEAN": pd.Series([0.0], dtype="float64"), "CC_SK_DPD_SIZE": pd.Series([0.0], dtype="float64"), "CC_SK_DPD_DEF_MIN": pd.Series([0.0], dtype="float64"), "CC_SK_DPD_DEF_MAX": pd.Series([0.0], dtype="float64"), "CC_SK_DPD_DEF_MEAN": pd.Series([0.0], dtype="float64"), "CC_SK_DPD_DEF_SIZE": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Active_MIN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Active_MAX": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Active_MEAN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Active_SIZE": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Approved_MIN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Approved_MAX": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Approved_MEAN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Approved_SIZE": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Completed_MIN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Completed_MAX": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Completed_MEAN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Completed_SIZE": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Demand_MIN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Demand_MAX": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Demand_MEAN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Demand_SIZE": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Refused_MIN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Refused_MAX": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Refused_MEAN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Refused_SIZE": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Sentproposal_MIN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Sentproposal_MAX": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Sentproposal_MEAN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Sentproposal_SIZE": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Signed_MIN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Signed_MAX": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Signed_MEAN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_Signed_SIZE": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_nan_MIN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_nan_MAX": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_nan_MEAN": pd.Series([0.0], dtype="float64"), "CC_NAME_CONTRACT_STATUS_nan_SIZE": pd.Series([0.0], dtype="float64"), "CC_COUNT": pd.Series([0.0], dtype="float64")}))
input_sample = StandardPythonParameterType({'data': data_sample})
method_sample = StandardPythonParameterType("predict")
sample_global_params = StandardPythonParameterType({"method": method_sample})

result_sample = NumpyParameterType(np.array([0]))
output_sample = StandardPythonParameterType({'Results':result_sample})

model_path = './model.pkl'
model = joblib.load(model_path)


@input_schema('GlobalParameters', sample_global_params,
              convert_to_provided_type=False)
@input_schema('Inputs', input_sample)
@output_schema(output_sample)
def run(Inputs, GlobalParameters={"method": "predict"}):
    data = Inputs['data']
    if GlobalParameters.get("method", None) == "predict_proba":
        result = model.predict_proba(data)
    elif GlobalParameters.get("method", None) == "predict":
        result = model.predict(data)
    else:
        raise Exception(
            f"Invalid predict method argument received. GlobalParameters: {GlobalParameters}")
    if isinstance(result, pd.DataFrame):
        result = result.values
    return {'Results': result.tolist()}

with open("../simple-dataset-test.csv") as f:
    data = list(csv.reader(f))

data = data[1:]
SK_ID_CURR = [d[2] for d in data]
data = [[d[0]] + d[4:] for d in data]
type_convert(data)


test_data = {"data": data}

res = run(test_data)
print(len(res["Results"]))
print(len(SK_ID_CURR))

dst = [["SK_ID_CURR", "TARGET"]]
for idx, pred in zip(SK_ID_CURR, res["Results"]):
    dst.append([idx, pred])
print(dst)

with open("submit.csv", "w") as f:
    writer = csv.writer(f, lineterminator='\n')
    writer.writerows(dst)
